{"version":3,"sources":["App.module.css","components/Project/Project.module.css","images/happy2help.PNG","images/decision_maker.png","components/Project/Project.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","app","landing","titleTextContainer","title","subTitle","scrollDown","downIcon","downText","projectsContainer","projectContainer","header","leftHeader","rightHeader","icon","cvIcon","container","left","right","rightContent","textContainer","button","__webpack_require__","p","Project","props","react_default","a","createElement","className","styles","description","href","codeUrl","style","backgroundImage","concat","img","demoUrl","App","projectsHeadline","imgHappy2Help","require","imgDecisionMaker","index_esm","onClick","window","scrollTo","behavior","top","offsetTop","ref","ph","components_Project_Project","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.236d55fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3i9t9\",\"landing\":\"App_landing__20MOk\",\"titleTextContainer\":\"App_titleTextContainer__2M217\",\"title\":\"App_title__3jVJ1\",\"subTitle\":\"App_subTitle__34Nw3\",\"scrollDown\":\"App_scrollDown__967CS\",\"downIcon\":\"App_downIcon__3C4mT\",\"downText\":\"App_downText__1g5mc\",\"projectsContainer\":\"App_projectsContainer__1oMwf\",\"projectContainer\":\"App_projectContainer__2i-r8\",\"header\":\"App_header__mddbV\",\"leftHeader\":\"App_leftHeader__mc1wc\",\"rightHeader\":\"App_rightHeader__2J-r2\",\"icon\":\"App_icon__2-6B6\",\"cvIcon\":\"App_cvIcon__2yH3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Project_container__1NY1Y\",\"left\":\"Project_left__4FlJ3\",\"right\":\"Project_right__3Y66R\",\"rightContent\":\"Project_rightContent__1R7dq\",\"textContainer\":\"Project_textContainer__1jD8r\",\"button\":\"Project_button__1d5jX\"};","module.exports = __webpack_public_path__ + \"static/media/happy2help.f3cf6f75.PNG\";","module.exports = __webpack_public_path__ + \"static/media/decision_maker.cf620293.png\";","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport styles from \"./Project.module.css\";\r\n\r\n\r\ninterface IProps {\r\n  title: string, \r\n  description: string, \r\n  img: any, \r\n  codeUrl: string, \r\n  demoUrl: string\r\n}\r\n\r\n\r\nconst Project: React.FC<IProps> = (props) => {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.left}>\r\n        <div className={styles.textContainer}>\r\n          <h2>{props.title}</h2>\r\n          <p>\r\n            {props.description}\r\n          </p>     \r\n        </div>\r\n\r\n        <a href={props.codeUrl} className={styles.button}>{\"<CODE/>\"}</a>\r\n      </div>\r\n\r\n      <div className={styles.right} style={{backgroundImage: `url(${props.img})`}}>\r\n        <div className={styles.rightContent}>\r\n          <a href={props.demoUrl} className={styles.button}>DEMO</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport styles from \"./App.module.css\";\nimport Project from \"./components/Project/Project\";\nimport {\n  FaGithub,\n  FaLinkedin,\n  FaEnvelope,\n  FaChevronDown\n} from \"react-icons/fa\";\nconst App: React.FC = () => {\n  let projectsHeadline: any = null;\n  const onScrollClick = () => {\n    window.scrollTo({\n      behavior: \"smooth\",\n      left: 0,\n      top: projectsHeadline.offsetTop\n    });\n  };\n\n  const imgHappy2Help = require(\"./images/happy2help.PNG\");\n  const imgDecisionMaker = require(\"./images/decision_maker.png\");\n\n\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.header}>\n        <div className={styles.leftHeader}>\n          <a href=\"mailto:schachdavid@web.de\">\n            <FaEnvelope className={styles.icon} />\n          </a>\n\n          <span className={styles.cvIcon}>CV</span>\n        </div>\n\n        <div className={styles.rightHeader}>\n          <a href=\"https://github.com/schachdavid\">\n            <FaGithub className={styles.icon} />\n          </a>\n          <a href=\"https://www.linkedin.com/in/david-schach-668a22137/\">\n            <FaLinkedin className={styles.icon} />\n          </a>\n        </div>\n      </div>\n      <div className={styles.landing}>\n        <div className={styles.titleTextContainer}>\n          <div className={styles.title}>DAVID SCHACH</div>\n          <div className={styles.subTitle}>FULL STACK DEVELOPER</div>\n        </div>\n\n        <a className={styles.scrollDown} onClick={onScrollClick}>\n          <FaChevronDown className={styles.downIcon} />\n          <div\n            ref={ph => {\n              projectsHeadline = ph;\n            }}\n            className={styles.downText}\n          >\n            Projects\n          </div>\n        </a>\n      </div>\n\n      <ul className={styles.projectsContainer}>\n        <li className={styles.projectContainer}>\n          <Project\n            title=\"Happy 2 Help\"\n            description=\"  A React Native app which helps helps people to volunteer.\"\n            codeUrl=\"https://github.com/saefty/happy2help_app\"\n            demoUrl=\"https://github.com/saefty/happy2help_app/blob/master/readme_assets/demo.gif\"\n            img={imgHappy2Help}\n          />\n        </li>\n        <li className={styles.projectContainer}>\n          <Project\n            title=\"Decision Maker\"\n            description=\"  A simple flutter app which helps you to make the best decision\n            possible.\"\n            codeUrl=\"https://github.com/schachdavid/decision-maker\"\n            demoUrl=\"https://github.com/schachdavid/decision-maker\"\n            img={imgDecisionMaker}\n          />\n        </li>\n        <li className={styles.projectContainer}>\n          <Project\n            title=\"Another Project\"\n            description=\"Some Description.\"\n            codeUrl=\"https://github.com/schachdavid/decision-maker\"\n            demoUrl=\"https://github.com/schachdavid/decision-maker\"\n            img=\"https://github.com/schachdavid/decision-maker\"\n          />\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}